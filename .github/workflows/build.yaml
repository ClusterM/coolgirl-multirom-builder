name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  build-linux:
    runs-on: ubuntu-latest
    env:
      APP_NAME: coolgirl-multirom-builder
      OUTPUT_DIR: output
      TOOLS_DIR: output/tools
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Get ARM toolchain
      run: sudo apt-get install gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
    - name: Copy main files
      run: >-
           mkdir -p ${{ env.OUTPUT_DIR }} &&
           cp -fR *.asm Makefile LICENSE README.md configs spec demos games homebrew images output
    - name: Build CoolgirlCombiner for Linux-x64
      run: dotnet publish tools_sources/CoolgirlCombiner -c Release -r linux-x64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build NesTiler for Linux-x64
      run: dotnet publish tools_sources/NesTiler/NesTiler -c Release -r linux-x64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build nesasm for Linux-x64
      run: make -C tools_sources/nesasm/source EXEDIR=../../../${{ env.TOOLS_DIR }}
    - name: Remove unnecessary files
      run: rm -f ${{ env.TOOLS_DIR }}/*.md
    - name: Upload artifact for Linux-x64
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-linux-x64
        path: ${{ env.OUTPUT_DIR }}
    - name: Clean
      run: >-
           rm -f ${{ env.TOOLS_DIR }}/* &&
           make -C tools_sources/nesasm/source clean
    - name: Build CoolgirlCombiner for Linux-ARM32
      run: dotnet publish tools_sources/CoolgirlCombiner -c Release -r linux-arm --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build NesTiler for Linux-ARM32
      run: dotnet publish tools_sources/NesTiler/NesTiler -c Release -r linux-arm --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build nesasm for Linux-ARM32
      run: make -C tools_sources/nesasm/source EXEDIR=../../../${{ env.TOOLS_DIR }} CC=arm-linux-gnueabihf-gcc
    - name: Remove unnecessary files
      run: rm -f ${{ env.TOOLS_DIR }}/*.md
    - name: Upload artifact for Linux-ARM32
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-linux-arm32
        path: ${{ env.OUTPUT_DIR }}
    - name: Clean
      run: >-
           rm -f ${{ env.TOOLS_DIR }}/* &&
           make -C tools_sources/nesasm/source clean
    - name: Build CoolgirlCombiner for Linux-ARM64
      run: dotnet publish tools_sources/CoolgirlCombiner -c Release -r linux-arm64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build NesTiler for Linux-ARM64
      run: dotnet publish tools_sources/NesTiler/NesTiler -c Release -r linux-arm64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build nesasm for Linux-ARM64
      run: make -C tools_sources/nesasm/source EXEDIR=../../../${{ env.TOOLS_DIR }} CC=aarch64-linux-gnu-gcc
    - name: Remove unnecessary files
      run: rm -f ${{ env.TOOLS_DIR }}/*.md
    - name: Upload artifact for Linux-ARM64
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-linux-arm64
        path: ${{ env.OUTPUT_DIR }}

  build-macos:
    runs-on: macos-latest
    env:
      APP_NAME: coolgirl-multirom-builder
      OUTPUT_DIR: output
      TOOLS_DIR: output/tools
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Install argp
      run: brew install argp-standalone
    - name: Copy main files
      run: >-
           mkdir -p ${{ env.OUTPUT_DIR }} &&
           cp -fR *.asm Makefile LICENSE README.md configs spec demos games homebrew images output
    - name: Build CoolgirlCombiner for MacOS-x64
      run: dotnet publish tools_sources/CoolgirlCombiner -c Release -r osx-x64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build NesTiler for MacOS-x64
      run: dotnet publish tools_sources/NesTiler/NesTiler -c Release -r osx-x64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build nesasm for MacOS-x64
      run: make -C tools_sources/nesasm/source EXEDIR=../../../${{ env.TOOLS_DIR }}
    - name: Remove unnecessary files
      run: rm -f ${{ env.TOOLS_DIR }}/*.md
    - name: Upload artifact for MacOS-x64
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-osx-x64
        path: ${{ env.OUTPUT_DIR }}

  build-windows:
    runs-on: windows-latest
    env:
      APP_NAME: coolgirl-multirom-builder
      OUTPUT_DIR: output
      TOOLS_DIR: output/tools
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Install msys
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          gcc
          git
          libargp-devel
    - name: Copy main files
      shell: msys2 {0}
      run: >-
           mkdir -p ${{ env.OUTPUT_DIR }} &&
           cp -fR *.asm Makefile LICENSE README.md configs spec demos games homebrew images output
    - name: Build CoolgirlCombiner for Win-x64
      run: dotnet publish tools_sources/CoolgirlCombiner -c Release -r win-x64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Build NesTiler for Win-x64
      run: dotnet publish tools_sources/NesTiler/NesTiler -c Release -r win-x64 --no-self-contained -o ${{ env.TOOLS_DIR }}
    - name: Remove unnecessary files
      shell: msys2 {0}
      run: rm -f ${{ env.TOOLS_DIR }}/*.md
    - name: Build nesasm for Win-x64
      shell: msys2 {0}
      run: make -C tools_sources/nesasm/source EXEDIR=../../../${{ env.TOOLS_DIR }}
    - name: Upload artifact for Win-x64
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-win-x64
        path: ${{ env.OUTPUT_DIR }}
